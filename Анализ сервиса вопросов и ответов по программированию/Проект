Задача 1
Найти количество вопросов, которые набрали больше 300 очков или как минимум 100 раз были добавлены в «Закладки».
SELECT COUNT(id)
FROM stackoverflow.posts
WHERE post_type_id = 1 AND score > 300 OR favorites_count >= 100

Задача 2 
Сколько в среднем в день задавали вопросов с 1 по 18 ноября 2008 включительно? 
WITH days AS(
SELECT DISTINCT(CAST(creation_date AS date)),
       COUNT(id) OVER (PARTITION BY CAST(creation_date AS date)) AS AVE
FROM stackoverflow.posts
WHERE post_type_id = 1 AND CAST(creation_date AS date) BETWEEN '2008-11-1' AND '2008-11-18')
SELECT ROUND(AVG(AVE))
FROM days

Задача 3 
Сколько пользователей получили значки сразу в день регистрации? 
SELECT  COUNT(DISTINCT(badges.user_id))
FROM stackoverflow.badges AS badges 
JOIN stackoverflow.users AS users ON badges.user_id = users.id
WHERE  (CAST(badges.creation_date AS date)) = (CAST(users.creation_date AS date))

Задача 4 
Сколько уникальных постов пользователя с именем Joel Coehoorn получили хотя бы один голос?
SELECT COUNT(DISTINCT(posts.id))
FROM stackoverflow.votes AS votes
JOIN stackoverflow.posts AS posts ON posts.id = votes.post_id
JOIN stackoverflow.users AS users ON users.id = posts.user_id
WHERE users.display_name LIKE 'Joel Coehoorn';

Задача 5
Выгрузите все поля таблицы vote_types. Добавьте к таблице поле rank, в которое войдут номера записей в обратном порядке. 
Таблица должна быть отсортирована по полю id.
SELECT *,
       ROW_NUMBER() OVER (ORDER BY id DESC)
FROM stackoverflow.vote_types
ORDER BY id

Задача 6 
Отберите 10 пользователей, которые поставили больше всего голосов типа Close. 
Отобразите таблицу из двух полей: идентификатором пользователя и количеством голосов. 
Отсортируйте данные сначала по убыванию количества голосов, потом по убыванию значения идентификатора пользователя.
WITH dsd AS (
  SELECT user_id,
         COUNT(vote_type_id) AS AVE
  FROM stackoverflow.votes
  WHERE vote_type_id = 6
  GROUP BY user_id
  ORDER BY AVE DESC, user_id DESC
  LIMIT 10
)
SELECT user_id AS use,
       AVE
FROM dsd
ORDER BY AVE DESC, use DESC;

Задача 7
Отберите 10 пользователей по количеству значков, полученных в период с 15 ноября по 15 декабря 2008 года включительно.
Отобразите несколько полей:
идентификатор пользователя;
число значков;
место в рейтинге — чем больше значков, тем выше рейтинг.
Пользователям, которые набрали одинаковое количество значков, присвойте одно и то же место в рейтинге.
Отсортируйте записи по количеству значков по убыванию, а затем по возрастанию значения идентификатора пользователя.
SELECT user_id,
         COUNT(id) AS AVE,
         DENSE_RANK()  OVER (ORDER BY COUNT(id) DESC)
FROM stackoverflow.badges
WHERE CAST(creation_date AS date) BETWEEN '2008-11-15' AND '2008-12-15'
GROUP BY user_id
ORDER BY AVE DESC, user_id 
LIMIT 10

Задача 8
Сколько в среднем очков получает пост каждого пользователя?
Сформируйте таблицу из следующих полей:
заголовок поста;
идентификатор пользователя;
число очков поста;
среднее число очков пользователя за пост, округлённое до целого числа.
Не учитывайте посты без заголовка, а также те, что набрали ноль очков.
WITH SDS AS (
  SELECT title,
         user_id,
         score
  FROM stackoverflow.posts
  WHERE score != 0 AND title IS NOT NULL
)
SELECT title,
       user_id,
       score,
       ROUND(AVG(score) OVER (PARTITION BY user_id)) AS avg_score
FROM SDS;

Задача 9 
Отобразите заголовки постов, которые были написаны пользователями, получившими более 1000 значков. Посты без заголовков не должны попасть в список.
WITH tisacha AS(
SELECT user_id,
       COUNT(id) as ds
FROM stackoverflow.badges
GROUP BY badges.user_id)

SELECT DISTINCT(posts.title)

FROM tisacha AS tisacha
JOIN stackoverflow.posts AS posts ON posts.user_id=tisacha.user_id
WHERE  posts.title IS NOT NULL AND ds >1000

Задача 10 
Напишите запрос, который выгрузит данные о пользователях из Канады (англ. Canada). Разделите пользователей на три группы в зависимости от количества просмотров их профилей:
пользователям с числом просмотров больше либо равным 350 присвойте группу 1;
пользователям с числом просмотров меньше 350, но больше либо равно 100 — группу 2;
пользователям с числом просмотров меньше 100 — группу 3.
Отобразите в итоговой таблице идентификатор пользователя, количество просмотров профиля и группу. Пользователи с нулевым количеством просмотров не должны войти в итоговую таблицу.
SELECT id,
        views,
    CASE
        WHEN views >= 350 THEN 1
        WHEN views >= 100 THEN 2
        ELSE 3
    END AS user_group
FROM stackoverflow.users
WHERE location LIKE '%Canada%' AND views !=0


Задача 11 
Дополните предыдущий запрос. Отобразите лидеров каждой группы — пользователей, которые набрали максимальное число просмотров в своей группе. 
Выведите поля с идентификатором пользователя, группой и количеством просмотров. 
Отсортируйте таблицу по убыванию просмотров, а затем по возрастанию значения идентификатора.
WITH dsds AS (
  SELECT id,
    views,
    CASE
      WHEN views >= 350 THEN 1
      WHEN views >= 100 THEN 2
      ELSE 3
    END AS user_group
  FROM stackoverflow.users
  WHERE location LIKE '%Canada%' AND views != 0
),
max_views AS (
  SELECT user_group,
    MAX(views) AS max_views
  FROM dsds
  GROUP BY user_group
)
SELECT dsds.id,
  dsds.user_group,
  dsds.views
FROM dsds
JOIN max_views ON  dsds.views = max_views.max_views
ORDER BY dsds.user_group;

Задача 12 
Посчитайте ежедневный прирост новых пользователей в ноябре 2008 года. Сформируйте таблицу с полями:
номер дня;
число пользователей, зарегистрированных в этот день;
сумму пользователей с накоплением.
WITH dsd AS(
SELECT EXTRACT('day' FROM creation_date) AS datee,
       COUNT(id) AS cac     
FROM stackoverflow.users
WHERE EXTRACT('year' FROM creation_date) = 2008 AND EXTRACT('month' FROM creation_date) = 11
GROUP BY datee)

SELECT datee,
       cac,
       SUM(cac) OVER (ORDER BY datee)
FROM  dsd     

Задача 13 
Для каждого пользователя, который написал хотя бы один пост, найдите интервал между регистрацией и временем создания первого поста. Отобразите:
идентификатор пользователя;
разницу во времени между регистрацией и первым постом.
WITH rega AS (
  SELECT id,
      creation_date
  FROM stackoverflow.users
),
post AS (
  SELECT user_id,
      ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY creation_date) AS row_num,
      creation_date
  FROM stackoverflow.posts
)

SELECT rega.id,
      post.creation_date - rega.creation_date as date_difference
FROM  post
JOIN rega ON post.user_id = rega.id
WHERE row_num = 1
